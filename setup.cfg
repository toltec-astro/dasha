[metadata]
name = dasha
author = Zhiyuan Ma
author_email = zhiyuanma@umass.edu
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://toltec-astro.github.io/dasha
description = A multi-page Dash app framework.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = toltec-astro/dasha

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy
    dash >= 2.0
    dash_component_template @ git+https://github.com/toltec-astro/dash_component_template.git@main
    flask
    click
    flask-dance
    flask_sqlalchemy
    pandas
    cachetools

[options.entry_points]
console_scripts =
    dasha_load_env = dasha.cli:load_env_helper
    dasha_demo = dasha.cli:run_demo
    dasha = dasha.cli:run_site

flask.commands =
    dasha = dasha.cli:run_flask

[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy
    mkdocs
all =

[options.package_data]
dasha = data/*

[tool:pytest]
testpaths = "dasha" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    dasha/_astropy_init*
    dasha/conftest.py
    dasha/*setup_package*
    dasha/tests/*
    dasha/*/tests/*
    dasha/extern/*
    dasha/version*
    */dasha/_astropy_init*
    */dasha/conftest.py
    */dasha/*setup_package*
    */dasha/tests/*
    */dasha/*/tests/*
    */dasha/extern/*
    */dasha/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
